#!/bin/bash

set -eux;

if [ $DORAVEL_INSTALLED -eq 1 ]; then
	echo "Doravel ya está instalado";
	exit 0;
fi

PHP_VERSION="8.3"
NODE_VERSION="22.2.0"
COMPOSER_VERSION="2.8.1"
PHP_EXTENSIONS=""

declare -A BUILD_PACKAGES
declare -A PECL_EXTENSIONS

add_build_package() {
    if [ -z "$1" ]; then
        echo "No se ha especificado el paquete";
        exit 1;
    fi

    KEY=$(echo "$1" | cut -d '=' -f 1);

    BUILD_PACKAGES[$KEY]="$1"
}


parse_arguments() {
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --composer)
        COMPOSER_VERSION="$2"
        shift 2
        ;;
      --build-pkg)
        add_build_package "$2"
        shift 2
        ;;
      --php)
        PHP_VERSION="$2"
        shift 2
        ;;
      --node)
        NODE_VERSION="$2"
        shift 2
        ;;
      --php-extensions)
        PHP_EXTENSIONS="$2"
        shift 2
        ;;
      --pecl-extension)
	  	KEY=$(echo "$2" | cut -d '=' -f 1);
		VALUE=$(echo "$2" | cut -d '=' -f 2);

		if [ -z "$VALUE" ]; then
			echo "No se ha especificado la versión de la extensión $KEY";
			exit 1;
		fi

        PECL_EXTENSIONS[$KEY]="$VALUE"
        shift 2
        ;;
      *)
        echo "Opción no reconocida: $1"
        exit 1
        ;;
    esac
  done
}

parse_arguments $@;


PHP_VERSION=$(echo "$PHP_VERSION" | sed -E 's/^([0-9]+)\.([0-9]+).*/\1\2/g')
PHP_PREFIX="php${PHP_VERSION}"
PHP_PACKAGES=$(echo "$PHP_EXTENSIONS" | sed -E 's/ +//g' | tr "," "\n" | xargs -I {} echo "${PHP_PREFIX}-{}")


apk add --no-cache \
    ${PHP_PACKAGES} \
    ${PHP_PREFIX} \
    nginx \
;

apk add --no-cache --virtual .build-deps \
    argon2-dev build-base coreutils linux-headers icu-data-full oniguruma-dev icu-dev zlib-dev autoconf gmp-dev libc-dev dpkg-dev pkgconf bison dpkg file make re2c g++ gcc gnupg libgcc musl-dev libstdc++ \
    ${BUILD_PACKAGES[@]};


curl -L "https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar" \
	 -o "/usr/local/bin/composer-cli";


for KEY in "${!PECL_EXTENSIONS[@]}"; do
	VALUE="${PECL_EXTENSIONS[$KEY]}";
	FILE_NAME="${KEY}-${VALUE}.tgz";
	curl -L "https://pecl.php.net/get/${FILE_NAME}" \
		 -o "/tmp/${FILE_NAME}";
done


curl -L "https://unofficial-builds.nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64-musl.tar.xz" \
	 -o "/tmp/node.tar.xz";


mkdir -p /root/.local/share/node;
rm -rf /root/.local/share/node/*;
tar -xJf /tmp/node.tar.xz -C /root/.local/share/node --strip-components=1;
ln -sf /root/.local/share/node/bin/* /usr/local/bin/;

chmod +x /usr/local/bin/*;
ln -sf /usr/bin/${PHP_PREFIX} /usr/local/bin/php-cli;
if [ -f /usr/bin/phpize${PHP_VERSION} ]; then
    ln -sf /usr/bin/phpize${PHP_VERSION} /usr/bin/phpize;
fi
if [ -f /usr/bin/phpdbg${PHP_VERSION} ]; then
    ln -sf /usr/bin/phpdbg${PHP_VERSION} /usr/bin/phpdbg;
fi
if [ -f /usr/bin/php-cgi${PHP_VERSION} ]; then
    ln -sf /usr/bin/php-cgi${PHP_VERSION} /usr/bin/php-cgi;
fi
if [ -f /usr/bin/php-config${PHP_VERSION} ]; then
    ln -sf /usr/bin/php-config${PHP_VERSION} /usr/bin/php-config;
fi
if [ -f /usr/bin/php-fpm${PHP_VERSION} ]; then
    ln -sf /usr/bin/php-fpm${PHP_VERSION} /usr/bin/php-fpm;
fi

for KEY in "${!PECL_EXTENSIONS[@]}"; do
	cd /tmp;
	VALUE="${PECL_EXTENSIONS[$KEY]}";
	PACKAGE="${KEY}-${VALUE}"
	echo "Instalando extensión $PACKAGE";
	PACKAGE_FILE="/tmp/${PACKAGE}.tgz"
	tar -xf "$PACKAGE_FILE";
	echo "Descomprimiendo $PACKAGE_FILE";
	cd "$PACKAGE";
	echo "Configurando $KEY";
	phpize;
	./configure;
	make;
	echo "Instalando $PACKAGE";
	make install;
done



apk del --no-network .build-deps;
sed -i 's/DORAVEL_INSTALLED=0/DORAVEL_INSTALLED=1/' /root/.rc;

rm -vf /var/spool/cron/crontabs/*;
rm -vf /usr/include/iconv.h;
rm -rf /var/cache/apk/*;
rm -rf /root/.pearrc;
rm -rf /tmp/*;