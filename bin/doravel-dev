#!/bin/bash

function print_help {
    echo '
DORAVEL COMMANDS:

Usage: doravel COMMAND [OPTIONS]

Commands:
    x                  Ejecuta un comando en la imagen de doravel
    sh                 Abre el terminal sh de doravel
    php                Ejecuta un comando php en el contenedor de laravel
    fix                Corrige los permisos de los archivos
    cmd                ejecuta un comando en el contenedor de laravel
    add                Agrega un nuevo entorno de docker-compose
    new                Crea un nuevo proyecto de laravel
    test               Inicia el entorno de pruebas
    init               Inicia un proyecto con doravel
    ports              Muestra los puertos de los servicios
    tinker             Abre el terminal tinker de laravel
    reload             Reinicia el contenedor de laravel
    install            Instala doravel globalmente
    artisan            Ejecuta un comando artisan
    composer           Ejecuta un comando composer
    installer          Crea un instalador de doravel
    supervisor         Ejecuta un comando supervisorctl
    timestamp          Estable el timestamp en el archivo .env
    logging            Muestra los logs de laravel
    global             Instala el comando doravel globalmente
    upgrade            Actualiza doravel a la ultima version globalmente
    update             Actualiza doravel a la ultima version en el proyecto
    ssh-keys           Genera las llaves ssh para el deploy
    rm-env             Elimina un entorno de doravel
    new-program        Agrega un nuevo programa a supervisor
    new-package        crea un nuevo paquete de laravel

Run "doravel COMMAND --help" for more information on a command.

--------------------------------------------

DOCKER COMPOSE COMMANDS:
    '"$(docker compose --help)"'
'
}

ENDPOINT="https://raw.githubusercontent.com/byancode/doravel/main"

create_slug() {
    echo $1 | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | sed 's/^-//g' | sed 's/-$//g'
}

write_timestamp() {
    ENV_FILE=$1

    if [ ! -f "./$ENV_FILE" ]; then
        echo "the $ENV_FILE file does not exist"
        exit 0
    fi

    TIMESPAMP=$(date -u +%Y-%m-%d\T%H:%M:%S)
    sed -i "s/DOCKER_IMAGE_UPDATED_AT=.*/DOCKER_IMAGE_UPDATED_AT=$TIMESPAMP/" ./$ENV_FILE
    echo "Timestamp set to $ENV_FILE ðŸ˜ƒ"
}

if [ "$1" == "" ]; then
    print_help
    exit 0
fi

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    print_help
    exit 0
fi

COMMAND="$1"

if [ $COMMAND == "" ]; then
    echo "Running doravel..."
fi

COMMANDS_DOCKER_COMPOSE=$(docker compose --help | awk '/^Commands:/ {flag=1; next} /^Options:/ {flag=0} /^Run/ {exit} flag {print $1}')

COMMANDS_ENVIRONMENT=(
    "tinker" "test" "migrate" "seed" "rollback"
    "artisan" "composer" "node" "npm" "php"
    "bash" "ash" "sh"
    "supervisor"
    "timestamp"
    "deploy"
    "env"
)

COMMANDS_DORAVEL=(
    "package"
    "project"
    "upgrade"
    "update"
)

# JOIN COMMANDS
COMMANDS=("${COMMANDS_DOCKER_COMPOSE[@]}" "${COMMANDS_ENVIRONMENT[@]}" "${COMMANDS_DORAVEL[@]}")

# exit if command not exists
if [[ ! " ${COMMANDS[@]} " =~ " ${COMMAND} " ]]; then
    echo "Command not found"
    exit 0
fi