#!/bin/bash=
# check if git is installed
if ! [ -x "$(command -v git)" ]; then
    echo 'Error: git is not installed.'
    exit 0
fi

# check if ssh-keygen is installed
if ! [ -x "$(command -v ssh-keygen)" ]; then
    echo 'Error: ssh-keygen is not installed.'
    exit 0
fi

if [ ! -d ./storage ]; then
    echo "this not is a doravel project"
    exit 0
fi

DORAVEL_GIT_URL=$(git config --get remote.origin.url)
DORAVEL_GIT_NAME=$(git config --get user.name)
DORAVEL_GIT_EMAIL=$(git config --get user.email)
DORAVEL_GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
DORAVEL_GIT_REPOSITORY=$(git config --get remote.origin.url | sed 's/.*\:\(.*\)\.git/\1/' | grep -o -E '(\w+\/\w+)$')

# check url if http
if [[ $DORAVEL_GIT_URL =~ ^http:// ]]; then
    echo ""
    echo "⚠️ Oops... necesitas que el remote origin de tu proyecto sea con ssh"
    echo ""
fi

if [ ! -d ./storage/.ssh ]; then
    mkdir ./storage/.ssh

    echo '*'             > ./storage/.ssh/.gitignore
    echo '!.id_rsa'     >> ./storage/.ssh/.gitignore
    echo '!.id_rsa.pub' >> ./storage/.ssh/.gitignore
fi
if [ ! -f ./storage/.ssh/id_rsa ]; then
    ssh-keygen -t rsa -b 4096 -C "$email" -f ./storage/.ssh/id_rsa -q -N ""
    chmod 600 ./storage/.ssh/id_rsa
fi

echo ""
echo "##🔑 SSH key generated 🔑##"
echo ""
cat ./storage/.ssh/id_rsa.pub
echo ""
echo ""
echo "⚠️⚠️ IMPORTANTE ⚠️⚠️"
echo "No olvide agregar la clave pública a su repositorio de GitHub!"
echo "👇️ Documentacion de DEPLOY KEYS 👇️"
echo ""
echo "https://docs.github.com/es/developers/overview/managing-deploy-keys#deploy-keys"
echo ""

RSA_KEY=$(cat ./storage/.ssh/id_rsa | base64 --wrap=0)
RSA_PUB=$(cat ./storage/.ssh/id_rsa.pub | base64 --wrap=0)

DOCKER_COMPOSE=\
'version: "3.1"
services:
    doravel:
        restart: always
        image: byancode/doravel
        environment:
            DORAVEL_GIT_EMAIL: '$DORAVEL_GIT_EMAIL'
            DORAVEL_GIT_NAME: '$DORAVEL_GIT_NAME'
            DORAVEL_ENV: ${APP_ENV:-local}
        volumes:
            - ./storage/.ssh:/root/.ssh
            - .:/var/www
        ports:
            - 80:80
            - 443:443
        networks:
            - default
    mysql:
        restart: always
        image: mariadb:latest
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
            MYSQL_DATABASE: $DB_DATABASE
            MYSQL_PASSWORD: $DB_PASSWORD
            MYSQL_USER: $DB_USERNAME
        expose:
            - 3306
        volumes:
            - data-database:/var/lib/mysql
        networks:
            - default
    redis:
        restart: always
        image: redis:latest
        expose:
            - 6379
        volumes:
            - data-redis:/data
        networks:
            - default
networks:
    default:
        driver: bridge
volumes:
    data-database:
    data-redis:
'

RESPOSE='y'

if [ -f ./docker-compose.yml ]; then
    read -p '¿Desea sobreescribir el archivo docker-compose.yml? (y/n): ' RESPOSE
fi

if [ "$RESPOSE" == 'y' ] && [ -f ./docker-compose.yml ]; then
    cp ./docker-compose.yml ./docker-compose.old.yml
fi

if [ "$RESPOSE" == 'y' ]; then
    echo "$DOCKER_COMPOSE" > ./docker-compose.yml
fi

curl https://raw.githubusercontent.com/byancode/doravel/main/bin/doravel > ./doravel
chmod +x ./doravel



echo '#!/bin/bash
####################################################################
# -- copiar todo y pegar en la terminal de linux de tu servidor -- #
####################################################################

mkdir -p /www && cd /www

echo "
┌────────────────────────────────────────────────────────────────┐
│                      desarrollado por:                         │
│             (Byancode S.A.C) byancode@gmail.com                │
└────────────────────────────────────────────────────────────────┘
"

bash <(curl https://raw.githubusercontent.com/byancode/doravel/main/bin/docker)

git config --global user.name  "'$DORAVEL_GIT_NAME'"
git config --global user.email "'$DORAVEL_GIT_EMAIL'"

echo "'$RSA_KEY'" | base64 -d > $HOME/.ssh/id_rsa
echo "'$RSA_PUB'" | base64 -d > $HOME/.ssh/id_rsa.pub

chmod 600 $HOME/.ssh/id_rsa

LANG=en_US

expect <<END
    set timeout -1
    spawn git clone --branch='$DORAVEL_GIT_BRANCH' git@github.com:'$DORAVEL_GIT_REPOSITORY'.git .

    expect "Are you sure you want to continue connecting\
    send "yes\r"

    expect eof
END

./doravel up --env production

echo "espera unos segundos para que se carguen los servicios"
echo "🙂: ./doravel up --env production"
' > ./install