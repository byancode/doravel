#!/bin/sh

function is_true {
    if [ "$1" == "true" ] || [ "$1" == "True" ] || [ "$1" == "TRUE" ] || [ "$1" == "1" ]; then
        return 0
    else
        return 1
    fi
}

function is_false {
    if [ "$1" == "false" ] || [ "$1" == "False" ] || [ "$1" == "FALSE" ] || [ "$1" == "0" ]; then
        return 0
    else
        return 1
    fi
}

APP_ENV=${APP_ENV:-'local'}

if [ ! -f /var/www/.env ] && [ -f /var/www/.env.example ]; then
    cp /var/www/.env.example /var/www/.env
fi

if [ ! -f /var/www/.env ] && [ ! -d /var/www/app ]; then
    rm -rf /var/www/*
fi

# check is /var/www/ empty
if [ ! "$(ls -A /var/www)" ]; then
    echo "Installing Laravel..."
    composer create-project --prefer-dist laravel/laravel /var/www
    echo "Laravel installed"
fi

if [ ! -f /var/www/.env ]; then
    echo "File /var/www/.env not found. Exiting..."
    exit 1
fi

if [ -f /var/www/.env.$APP_ENV ]; then
    source /var/www/.env.$APP_ENV
else
    source /var/www/.env
fi

if [ -d /var/www/storage/.ssh ]; then
    cp -R /var/www/storage/.ssh /root/.ssh
fi

if [ -f /root/.ssh/id_rsa ]; then
    chmod 600 /root/.ssh/id_rsa
fi



# aqui agregaremos los argumentos para el servidor octane
LARAVEL_SERVER_ARGUMENTS=${LARAVEL_SERVER_ARGUMENTS:-""}
LARAVEL_AUTO_SCHEDULE=${LARAVEL_AUTO_SCHEDULE:-true}
PHP_OPCACHE_ENABLE=${PHP_OPCACHE_ENABLE:-false}
NPM_AUTO_INSTALL=${NPM_AUTO_INSTALL:-true}
NPM_AUTO_BUILD=${NPM_AUTO_BUILD:-true}
GIT_AUTO_PULL=${GIT_AUTO_PULL:-true}


GIT_NAME=${GIT_NAME:-"Byancode"}
GIT_EMAIL=${GIT_EMAIL:-"byancode@gmail.com"}


PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE:-1G}
PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-60}
PHP_POST_MAX_SIZE=${PHP_POST_MAX_SIZE:-1G}
PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-512M}


git config --global user.name  "$(echo $GIT_NAME)"
git config --global user.email "$(echo $GIT_EMAIL)"


PHP_INI_FILE="${PHP_INI_DIR}/php.ini"

if [ ! -f $PHP_INI_FILE ]; then
    cp -v "${PHP_INI_FILE}-production" $PHP_INI_FILE
fi

sed -e 's/upload_max_filesize =.*/upload_max_filesize='$PHP_UPLOAD_MAX_FILESIZE'/' -i $PHP_INI_FILE;
sed -e 's/max_execution_time =.*/max_execution_time='$PHP_MAX_EXECUTION_TIME'/' -i $PHP_INI_FILE;
sed -e 's/post_max_size =.*/post_max_size='$PHP_POST_MAX_SIZE'/' -i $PHP_INI_FILE;
sed -e 's/memory_limit =.*/memory_limit='$PHP_MEMORY_LIMIT'/' -i $PHP_INI_FILE;



if is_true $PHP_OPCACHE_ENABLE; then
    OPCACHE_ENABLE=1
else
    OPCACHE_ENABLE=0
fi

OPCACHE_FILE="${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini"
sed -e 's/opcache.enable=.*/opcache.enable='$OPCACHE_ENABLE'/' -i $OPCACHE_FILE
sed -e 's/opcache.enable_cli=.*/opcache.enable_cli='$OPCACHE_ENABLE'/' -i $OPCACHE_FILE



APP_DEBUG=${APP_DEBUG:-true}
APP_URL=${APP_URL:-"http://localhost"}
APP_HOST=$(php -r "echo parse_url('$APP_URL', PHP_URL_HOST);")
APP_TIMEZONE=${APP_TIMEZONE:-"UTC"}
APP_SELF_CERT=${APP_SELF_CERT:-true}



if [[ "${APP_URL}" =~ ^https:// ]]; then
    APP_SSL=${APP_SSL:-true}
else
    APP_SSL=${APP_SSL:-false}
fi



if is_true $APP_SSL && is_true $APP_SELF_CERT; then
    echo "Starting SSL certificate..."

    APP_IP=$(/bin/hostname -I | /usr/bin/awk '{print $1}')
    sed -e 's/__APP_HOST__/'$APP_HOST'/' -i /etc/ssl/sancert.cnf
    sed -e 's/__APP_IP__/'$APP_IP'/' -i /etc/ssl/sancert.cnf

    openssl dhparam -out /etc/ssl/certs/laravel.pem 2048
    openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
    -subj "/C=PE/ST=Lima/O=Byancode S.A.C/CN="${APP_HOST} \
    -out /etc/ssl/certs/laravel.crt \
    -keyout /etc/ssl/certs/laravel.key
    echo "SSL certificate generated"
fi


# configure timezone
ln -snf /usr/share/zoneinfo/${APP_TIMEZONE} /etc/localtime
echo ${APP_TIMEZONE} > /etc/timezone
echo "Timezone configured"


sed -e 's/__APP_ENV__/'$APP_ENV'/' -i /etc/nginx/sites-available/site.conf
sed -e 's/__APP_ENV__/'$APP_ENV'/' -i /etc/nginx/sites-available/ssl-site.conf
echo "Environment configured"


sed -e 's/__APP_HOST__/'$APP_HOST'/' -i /etc/nginx/sites-available/site.conf
sed -e 's/__APP_HOST__/'$APP_HOST'/' -i /etc/nginx/sites-available/ssl-site.conf
echo "Host configured"



if is_true $APP_SSL; then
    rm -f /etc/nginx/sites-available/site.conf;
else
    rm -f /etc/nginx/sites-available/ssl-site.conf;
fi
echo "SSL configured"

if [ -d /var/www/storage ]; then
    chmod -R 777 /var/www/storage;
else
    mkdir /var/www/storage;
    chmod -R 777 /var/www/storage;
fi

if [ ! -d /var/www/vendor/ ]; then
    composer install --quiet --working-dir=/var/www
fi

if [ ! -d /var/www/node_modules/ ]; then
    if is_true $NPM_AUTO_INSTALL || is_true $NPM_AUTO_BUILD || is_true $APP_DEBUG || [ "$APP_ENV" == "local" ]; then
        if is_true $APP_DEBUG || [ "$APP_ENV" == "local" ]; then
            echo "Install node packages and chokidar..."
            npm install --prefix /var/www chokidar
            echo "Node packages and chokidar installed"
        else
            echo "Installing npm packages..."
            npm install --prefix /var/www
            echo "npm packages installed"
        fi
    fi
fi

if [ ! -d /var/www/node_modules/chokidar ]; then
    if [ "$APP_ENV" == "local" ] || is_true $APP_DEBUG; then
        echo "Install node chokidar..."
        npm install --prefix /var/www chokidar
        echo "Node chokidar installed"
    fi
fi

if is_true $NPM_AUTO_BUILD; then
    echo "Building assets..."
    if is_true $APP_DEBUG; then
        npm run dev
    else
        npm run build
    fi
    echo "Assets built"
fi

if [ ! -L /var/www/public/storage ]; then
    php artisan storage:link
fi

if [ ! -d /var/www/vendor/laravel/octane ]; then
    composer require laravel/octane --working-dir=/var/www --with-all-dependencies
    php /var/www/artisan octane:install --server=swoole
fi

# create temporary supervisor configuration
cat /usr/local/etc/supervisord.conf > /supervisord.conf

if is_true $LARAVEL_AUTO_SCHEDULE; then
    cat /var/services/service-schedule.conf >> /supervisord.conf
fi

if is_true $GIT_AUTO_PULL; then
    if [ -d /var/www/.git ]; then
        cat /var/services/service-deploy.conf >> /supervisord.conf
        doravel-git-pull
    fi
fi

if [ "$APP_ENV" != "local" ] && is_false $APP_DEBUG; then
    cat /var/services/service-octane.conf >> /supervisord.conf
fi

if [ -f /var/www/supervisord.conf ]; then
    echo ""                       >> /supervisord.conf
    cat /var/www/supervisord.conf >> /supervisord.conf
fi

sed -e 's/__ARGS__/'$LARAVEL_SERVER_ARGUMENTS'/' -i /supervisord.conf
sed -e 's/__ENV__/'$APP_ENV'/' -i /supervisord.conf

echo "Starting supervisord..."

if [ "$APP_ENV" == "local" ] || is_true $APP_DEBUG; then
    /usr/bin/supervisord --configuration /supervisord.conf
    /usr/local/bin/php -d variables_order=EGPCS /var/www/artisan --env=$APP_ENV octane:start --server=swoole --port=8000 --watch $(echo $LARAVEL_SERVER_ARGUMENTS)
else
    /usr/bin/supervisord --nodaemon --configuration /supervisord.conf
fi