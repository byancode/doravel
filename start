#!/bin/bash
source /root/.bashrc


if [ -f /var/www/.env ]; then
    source /var/www/.env
else
    echo "File /www/.env not found. Exiting..."
    exit 1
fi

/known

CNF_APP_DEBUG=${APP_DEBUG:-true}
CNF_APP_URL=${APP_URL:-"http://localhost"}
CNF_APP_HOST=$(/usr/bin/php -r "echo parse_url('${CNF_APP_URL}', PHP_URL_HOST);")
CNF_APP_TIMEZONE=${APP_TIMEZONE:-"UTC"}
CNF_APP_SELF_CERT=${APP_SELF_CERT:-true}

if [[ "${CNF_APP_URL}" =~ ^https:// ]]; then
    CNF_APP_SSL=${APP_SSL:-true}
else
    CNF_APP_SSL=${APP_SSL:-false}
fi

CNF_SOKETI_PATH=$(which soketi);
CNF_SOKETI_PORT=${SOKETI_PORT:-6002}
CNF_SOKETI_ID=${SOKETI_ID:-"some-id"}
CNF_SOKETI_KEY=${SOKETI_KEY:-"some-key"}
CNF_SOKETI_SECRET=${SOKETI_SECRET:-"some-secret"}
CNF_SOKETI_WEBHOOK=${SOKETI_WEBHOOK:-"http://localhost:8080"}

echo "Starting Soketi..."
echo $(jq '.debug = '$CNF_APP_DEBUG' | .port = '$CNF_SOKETI_PORT' | ."appManager.array.apps.0.id" = "'$CNF_SOKETI_ID'" | ."appManager.array.apps.0.key" = "'$CNF_SOKETI_KEY'" | ."appManager.array.apps.0.secret" = "'$CNF_SOKETI_SECRET'" | ."appManager.array.apps.0.webhooks"[0].url = "'$CNF_SOKETI_WEBHOOK'"' /var/soketi/config.json) > /var/soketi/config.json
echo "Soketi started"

if [ $CNF_APP_SSL == true ] && [ $CNF_APP_SELF_CERT == true ]; then
    echo "Starting SSL certificate..."

    CNF_APP_IP=$(/bin/hostname -I | /usr/bin/awk '{print $1}')
    sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/ssl/sancert.cnf
    sed -e 's/__APP_IP__/'$CNF_APP_IP'/' -i /etc/ssl/sancert.cnf

    openssl dhparam -out /etc/ssl/certs/laravel.pem 2048
    openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
    -subj "/C=PE/ST=Lima/O=Byancode S.A.C/CN="${CNF_APP_HOST} \
    -out /etc/ssl/certs/laravel.crt \
    -keyout /etc/ssl/certs/laravel.key
    echo "SSL certificate generated"
fi

# configure timezone
ln -snf /usr/share/zoneinfo/${CNF_APP_TIMEZONE} /etc/localtime
echo ${CNF_APP_TIMEZONE} > /etc/timezone
echo "Timezone configured"

# defive octane server
sed -e 's@__SOKETI__@'$CNF_SOKETI_PATH'@' -i /etc/supervisord.conf
echo "Soketi configured"

sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/fpm.conf
sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/site.conf
sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/soketi.conf
sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/ssl-fpm.conf
sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/ssl-site.conf
sed -e 's/__APP_HOST__/'$CNF_APP_HOST'/' -i /etc/nginx/sites-available/ssl-soketi.conf
echo "Host configured"

if [ $CNF_APP_SSL == true ] ; then \
    rm -f /etc/nginx/sites-available/fpm.conf;
    rm -f /etc/nginx/sites-available/site.conf;
    rm -f /etc/nginx/sites-available/soketi.conf;
else
    rm -f /etc/nginx/sites-available/ssl-fpm.conf;
    rm -f /etc/nginx/sites-available/ssl-site.conf;
    rm -f /etc/nginx/sites-available/ssl-soketi.conf;
fi
echo "SSL configured"

chown -R apache:apache storage
chown -R apache:apache bootstrap/cache
echo "Storage and cache directories configured"

if [ ! -d /var/www/vendor ]; then
    composer install
fi

if [ ! -d /var/www/node_modules ]; then
    npm install
fi

LARAVEL_OCTANE_EXISTS=$(jq '.require["laravel/octane"]' /var/www/composer.json)
if [ "$LARAVEL_OCTANE_EXISTS" == "null" ]; then
    composer require laravel/octane -W
fi

if [ ! -L /var/www/public/storage ]; then
    php artisan storage:link
fi

if [ ! -f /var/www/config/octane.php ]; then
    php artisan octane:install --server=$CNF_OCTANE_SERVER
fi

if [ -f /var/www/supervisord.conf ]; then
    cat /var/www/supervisord.conf >> /etc/supervisord.conf
fi

if [ $# -eq 0 ]; then
    echo "Starting supervisord..."
    /usr/bin/supervisord -n -c /etc/supervisord.conf
else
    exec "$@"
fi