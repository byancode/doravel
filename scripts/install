#!/bin/bash

PACKAGES="curl git unzip jq go";
MANAGER="";

if [ -x "$(command -v sudo)" ]; then
    MANAGER="sudo";
fi

if [ -x "$(command -v apt)" ]; then
    SUDO_MKDIR="$MANAGER mkdir";
    SUDO_GPG="$MANAGER gpg";
    SUDO_TEE="$MANAGER tee";
    MANAGER="$MANAGER apt";
    $MANAGER update;
    $SUDO_MKDIR -p /etc/apt/keyrings
    curl -fsSL https://repo.charm.sh/apt/gpg.key | $SUDO_GPG --dearmor -o /etc/apt/keyrings/charm.gpg
    echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | $SUDO_TEE /etc/apt/sources.list.d/charm.list
    $MANAGER install -y $(echo $PACKAGES) gh gum;
elif [ -x "$(command -v dnf)" ]; then
    MANAGER="$MANAGER dnf";
    $MANAGER update;
    $MANAGER install -y $(echo $PACKAGES);

    if [ -x "$(command -v gh)" ]; then
        $MANAGER install 'dnf-command(config-manager)'
        $MANAGER config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
        $MANAGER install gh --repo gh-cli
    fi
elif [ -x "$(command -v yum)" ]; then
    MANAGER="$MANAGER yum";
    $MANAGER update;

    type -p yum-config-manager >/dev/null || $MANAGER install yum-utils

    if [ -x "$(command -v sudo)" ]; then
        CONFIG_MANAGER="sudo yum-config-manager";
    else
        CONFIG_MANAGER="yum-config-manager";
    fi

    $MANAGER install -y $(echo $PACKAGES);

    if [ -x "$(command -v gh)" ]; then
        $CONFIG_MANAGER --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
        $MANAGER install gh
    fi
elif [ -x "$(command -v apk)" ]; then
    MANAGER="$MANAGER apk";
    $MANAGER update;
    $MANAGER add $(echo $PACKAGES) github-cli;
elif [ -x "$(command -v pacman)" ]; then
    MANAGER="$MANAGER pacman";
    $MANAGER -Sy;
    $MANAGER -S $(echo $PACKAGES) github-cli;
else
    echo "Distro not supported"
    exit 1
fi

if [ -x "$(command -v sh)" ]; then
    INTERPRETER="sh"
elif [ -x "$(command -v bash)" ]; then
    INTERPRETER="bash"
fi

if ! [ -x "$(command -v docker)" ]; then
    read -p "¿Desea instalar docker? (y/n): " RESPONSE
    if [ "$RESPONSE" != 'y' ]; then
        echo "Docker is not installed"
        exit 1
    fi
    if [ -x "$INTERPRETER" ]; then
        curl https://get.docker.com | $(echo $INTERPRETER)
    else
        echo "El intérprete no es ejecutable"
        exit 1
    fi
fi

ENDPOINT="https://raw.githubusercontent.com/byancode/doravel/develop"

if [ ! -d ~/bin ]; then
    mkdir ~/bin
fi

curl -s $ENDPOINT/bin/doravel -o ~/bin/doravel

if [ -f ~/bin/doravel ]; then
    ln -sf ~/bin/doravel ~/bin/dv
fi

if ! grep -q "export PATH=\$PATH:\$HOME/bin" ~/.bashrc; then
    echo "" >> ~/.bashrc
    echo "export PATH=\$PATH:\$HOME/bin" >> ~/.bashrc
    echo "" >> ~/.bashrc
fi

source ~/.bashrc
